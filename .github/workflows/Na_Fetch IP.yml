name: Fetch IP Addresses

on:
  workflow_dispatch: # 允許手動觸發
  # schedule: # 或者定時觸發
  #   - cron: '0 */3 * * *' # 每3小時執行一次
jobs:
  fetch_ips:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 或者適合你倉庫的版本

      - name: Set up Python
        uses: actions/setup-python@v5 # 或者適合你倉庫的版本
        with:
          python-version: '3.11' # 指定 Python 版本

      - name: Install dependencies
        run: pip install requests

      - name: Run IP fetching script
        # 將環境變數傳遞給 Python 腳本
        # Secrets 會自動作為環境變數可用，Variables 需要使用 env 關鍵字明確指定
        env:
          REMOTE_JSON_URL: ${{ secrets.REMOTE_JSON_URL || vars.REMOTE_JSON_URL }} # 優先使用 Secret，如果 Secret 不存在則嘗試使用 Variable
        # 假設你的 Python 腳本叫做 fetch_ips.py
        run: python fetch_ips.py

      - name: Commit and push txt files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # 更健壯的檢查方式：先 add，再檢查是否有 staged 的變更
          git add *.txt
          # 使用 git diff --staged --quiet 檢查是否有文件被實際 stage
          # 如果沒有 staged 的變更，則 ! 返回 true (退出碼 1)，執行 commit 和 push
          # 如果有 staged 的變更，則 ! 返回 false (退出碼 0)，不執行
          if ! git diff --staged --quiet; then
            echo "發現 txt 文件變更，正在提交和推送..."
            git commit -m "Update IP address files"
            git push
          else
            echo "未檢測到 txt 文件變更，無需提交。"
          fi

      - name: Upload artifact (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: ip-address-files
          path: |
            *.txt
          if-no-files-found: warn # 如果沒有 txt 文件，則發出警告而不是失敗
